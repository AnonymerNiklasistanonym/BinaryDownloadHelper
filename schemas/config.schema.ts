/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Pointer to the schema against which this document should be validated
 */
export type Schema = string;

export interface Config {
    $schema?: Schema;
    /**
     * Programs
     */
    programs: Program[];
    /**
     * Variables
     */
    variables?: Variable[];
}
/**
 * A program without an native installer
 */
export interface Program {
    /**
     * Program description
     */
    description?: string;
    /**
     * Download type of program
     */
    downloadInformation: DownloadProgram | DownloadProgramInZip;
    /**
     * Declaring that this program is not just an executable but a whole directory
     */
    isDirectory?: boolean;
    /**
     * Program name
     */
    name: string;
    /**
     * The directory where the program should be moved to
     */
    outputDirectory: string;
    /**
     * Name to which the extracted program/program directory should be renamed to
     */
    renameTo?: string;
    /**
     * Program version
     */
    version?: string;
    /**
     * The program website
     */
    website?: string;
}
/**
 * Download program directly via URL
 */
export interface DownloadProgram {
    /**
     * Download type ID
     */
    id: "DOWNLOAD_PROGRAM_DIRECTLY";
    /**
     * Download url
     */
    url: string;
    /**
     * Previous download urls
     */
    urlHistory?: string[];
}
/**
 * Download ZIP file via URL and then extract program
 */
export interface DownloadProgramInZip {
    /**
     * Download type ID
     */
    id: "DOWNLOAD_PROGRAM_IN_ZIP";
    /**
     * Download url
     */
    url: string;
    /**
     * Previous download urls
     */
    urlHistory?: string[];
    /**
     * Location of EXE in ZIP file
     */
    zipLocation: string[];
    /**
     * Use 7zip for unpacking the ZIP file
     */
    "7zip"?: boolean;
}
/**
 * Variable that will be replaced by a set value using ${VARIABLE_NAME} (supported by: 'renameTo', 'outputDirectory')
 */
export interface Variable {
    /**
     * Name of the variable that can be reused as ${VARIABLE_NAME}
     */
    name: string;
    /**
     * Value of the variable
     */
    value: string;
}
